<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/home.css">
</head>
<body>
      <div class="payment-page">
  <div class="payment-page-content row">
      <div class="col-7" style="border-right: 1px solid lightgrey;">
         <div class="product-details mr-2">
                <div class="cart-heading">Edit your order</div>
                <div id="cart-item"></div>
                <div class="subtotal" id="cart-subtotal"></div>
                <button class="btn btn-green" id="confirm-order">Confirm Order</button>
            </div>
      </div>
      <div class="col-5">
        <h2>
      Thanks for Order
      </h2>
      <ul class="payment-list-wrapper">
        <li class="payment-list-item">
          <span>Subtotal </span>
          <span id="subtotal"></span>
        </li>
        <li class="payment-list-item">
          <span>Discount </span>
          <span>- &#8377; 0</span>
        </li>
        <li class="payment-list-item">
          <span>GST </span>
          <span id="gst"></span>
        </li>
        <li class="payment-list-item">
          <span>Delivery Charges</span>
          <span id="delivery"></span>
        </li>
      </ul>
      <div class="payment-total-wrapper">
      <h3>Total</h3> <b id="totalprice"></b>
      </div>
      <div class="payment-confirmation-wrapper">
      <button class="payment-button" id="rzp-button1">
        Pay Online
      </button>
      <span>Or</span>
       <button class="payment-button">
        Cash on Delivery
      </button>
      </div>
      </div>
  </div>
</div>


    <script src="https://cdn.jsdelivr.net/npm/axios@0.21.4/dist/axios.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.0/jquery-ui.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
      let port = window.location.port ? ':'+window.location.port: '';
      let baseUrl = `${window.location.protocol}//${window.location.hostname}${port}`;

      let subtotal = 0
      //console.log("subtotal : ",subtotal)

      const queryString = window.location.search;
      //console.log(queryString);
      const urlParams = new URLSearchParams(queryString);
      //console.log(urlParams);
      const totalPrice = urlParams.get('totalPrice');
      //console.log(totalPrice);
      const orderId = urlParams.get('orderId');
      const gst = urlParams.get('gst');
      //const subtotal = urlParams.get('subtotal');
      const deliveryCharges = urlParams.get('deliveryCharges'); 

      axios.get(`${baseUrl}/api/v1/order/${orderId}`)
      .then((order)=>{

      })
      .catch(err=>{
        console.log(err)
      })

            let finalTotal = localStorage.getItem('updatedTotal')
            console.log(finalTotal)
            axios.post(`${baseUrl}/api/v1/payment/order?totalPrice=${finalTotal}`).then((data)=>{
                console.log(data)
                console.log(data.data.data.id)
                var options = {
                      "key": "rzp_test_uYURsxfax869Qb",
                      "amount": data.data.data.amount,
                      "currency": data.data.data.currency,
                      "name": "Acme Corp",
                      "description": "Test Transaction",
                      "image": "https://example.com/your_logo",
                      "order_id": data.data.data.id,
                      "handler": function (response){
                              axios.post(`${baseUrl}/api/v1/isordercomplete?orderId=${orderId}`,response).then(res=>{
                                console.log(res.data.redirectUrl);
                                window.location = res.data.redirectUrl
                              })
                              console.log("payment_id:",response.razorpay_payment_id);
                              console.log("order_id:",response.razorpay_order_id);
                              console.log("signature:",response.razorpay_signature);
                      },
                      "theme": {
                          "color": "#3399cc"
                      }
                };

              var rzp1 = new Razorpay(options);
              rzp1.on('payment.failed', function (response){
                    window.location = `${baseUrl}/api/v1/paymentfailure`;
                    //alert(response.error.code);
                    //alert(response.error.description);
                    //alert(response.error.source);
                    //alert(response.error.step);
                    //alert(response.error.reason);
                    //alert(response.error.metadata.order_id);
                    //alert(response.error.metadata.payment_id);
              });
              document.getElementById('rzp-button1').onclick = function(e){
                rzp1.open();
                e.preventDefault();
              }
            })
            

            //update order api
            document.getElementById('confirm-order').onclick = function(e){
                
                let data = JSON.parse(localStorage.getItem('__cart'))
                console.log(data)

                let items = []
            
                data.map(item => {
                  let itm = {menuitemId:item.id,quantity:item.quantity}
                  items.push(itm)
                })
                console.log(items)

                const data1 = {
                  totalPrice : subtotal,
                  items: items
                }

                axios.post(
                  `${baseUrl}/api/v1/updateorder/${orderId}`,
                   data1,
                ).then(res => {
                  console.log(res)

                  let updatedtotal = res.data.order.total;
                  let updatedgst = res.data.order.gst;
                  let updateddeliveryCharges = res.data.order.deliveryCharges;

                  localStorage.setItem('updatedTotal',updatedtotal)

                  $("#totalprice").empty();
                  $("#gst").empty();
                  $("#delivery").empty();

                  let totalpricestring = `&#8377; ${updatedtotal}`
                  $("#totalprice").append(totalpricestring)
                  let gststring = `+ &#8377; ${updatedgst}`
                  $("#gst").append(gststring)
                  let deliverystring = `+ &#8377; ${updateddeliveryCharges}`
                  $("#delivery").append(deliverystring)
                })
                .catch(err => {
                  alert(err.response.data.error)
                })
              }

            
              let totalpricestring = `&#8377; ${totalPrice}`
              $("#totalprice").append(totalpricestring)
              let gststring = `+ &#8377; ${gst}`
              $("#gst").append(gststring)
              
              let deliverystring = `+ &#8377; ${deliveryCharges}`
              $("#delivery").append(deliverystring)

              const showSubtotal = () => {
                subtotal = 0;
                let data = JSON.parse(localStorage.getItem('__cart'))
                $('#subtotal').empty()

                data.map(item=>{
                  subtotal += item.price * item.quantity;
                })
                let templateString = `Total : &#8377; ${subtotal}`;
                $('#cart-subtotal').html(templateString);

                let subtotalstring = `&#8377; ${subtotal}`
                $("#subtotal").append(subtotalstring)
              }
              
              const showCartItem = () =>{
                let data = JSON.parse(localStorage.getItem('__cart'))
                //console.log(data)
                $("#cart-item").empty()
        
                data.map(item =>{
                  let templateString = `<div class="d-flex justify-content-between align-items-center mt-3 p-2 items rounded">
                    <div class="d-flex flex-row">
                        <div class="ml-2"><span class="font-weight-bold d-block">${item.name}</span></div>
                    </div>
                    <div class="d-flex flex-row align-items-center"><span class="mr-3 edit-btn" data-id=${item.id} onclick="addItem(this.dataset.id)">+</span><span class="d-block">${item.quantity}</span><span class="ml-3 edit-btn" data-id=${item.id} onclick="minusItem(this.dataset.id)">-</span><span class="d-block ml-5 font-weight-bold">&#8377; ${item.price}</span><i class="fa fa-trash-o ml-3 text-danger" data-id=${item.id} onclick="removeItem(this.dataset.id)"></i></div>
                </div>`

                  $("#cart-item").append(templateString);
                })
                showSubtotal()
              }

              const removeItem = (id) => {
                let data = JSON.parse(localStorage.getItem('__cart'))
                //console.log(data)
                let remainingItems = data.filter(item=>{
                  return item.id != id;
                })
                console.log(remainingItems)
                localStorage.setItem('__cart',JSON.stringify(remainingItems));
                showCartItem();
              }

              const addItem = (id) =>{
                let data = JSON.parse(localStorage.getItem('__cart'))
                let editedItem = []
                 data.map(item=>{
                  if(item.id == id){
                    item.quantity += 1;
                  }
                  editedItem.push(item)
                })  
                localStorage.setItem('__cart',JSON.stringify(editedItem));
                showCartItem();
              }

              const minusItem = (id) =>{
                let data = JSON.parse(localStorage.getItem('__cart'))
                let editedItem = []
                 data.map(item=>{
                  if(item.id == id){
                    item.quantity -= 1;
                  }
                  editedItem.push(item)
                })  
                localStorage.setItem('__cart',JSON.stringify(editedItem));
                showCartItem();
              }

              window.addEventListener("load",()=>{
                showCartItem();
              })

            
    </script>
</body>
</html>
